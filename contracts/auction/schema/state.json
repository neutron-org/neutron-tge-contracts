{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "State",
  "type": "object",
  "required": [
    "atom_lp_locked",
    "atom_lp_size",
    "atom_ntrn_size",
    "is_rest_lp_vested",
    "pool_init_timestamp",
    "total_atom_deposited",
    "total_usdc_deposited",
    "usdc_lp_locked",
    "usdc_lp_size",
    "usdc_ntrn_size"
  ],
  "properties": {
    "atom_lp_locked": {
      "description": "locked ATOM LP shares",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "atom_lp_size": {
      "description": "LP count for ATOM amount",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "atom_ntrn_size": {
      "description": "ATOM NTRN amount",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "is_rest_lp_vested": {
      "type": "boolean"
    },
    "lp_atom_shares_minted": {
      "description": "Total LP shares minted post liquidity addition to the NTRN-ATOM Pool",
      "anyOf": [
        {
          "$ref": "#/definitions/Uint128"
        },
        {
          "type": "null"
        }
      ]
    },
    "lp_usdc_shares_minted": {
      "description": "Total LP shares minted post liquidity addition to the NTRN-USDC Pool",
      "anyOf": [
        {
          "$ref": "#/definitions/Uint128"
        },
        {
          "type": "null"
        }
      ]
    },
    "pool_init_timestamp": {
      "description": "Timestamp at which liquidity was added to the NTRN-ATOM and NTRN-USDC LP Pool",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "total_atom_deposited": {
      "description": "Total ATOM deposited to the contract",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "total_usdc_deposited": {
      "description": "Total USDC deposited to the contract",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "usdc_lp_locked": {
      "description": "locked USDC LP shares",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "usdc_lp_size": {
      "description": "LP count for USDC amount",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "usdc_ntrn_size": {
      "description": "USDC NTRN amount",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    }
  },
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
