{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "This structure describes the execute messages available in the contract.",
  "oneOf": [
    {
      "description": "Claim claims vested tokens and sends them to a recipient",
      "type": "object",
      "required": [
        "claim"
      ],
      "properties": {
        "claim": {
          "type": "object",
          "properties": {
            "amount": {
              "description": "The amount of tokens to claim",
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "recipient": {
              "description": "The address that receives the vested tokens",
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Receives a message of type [`Cw20ReceiveMsg`] and processes it depending on the received template",
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Cw20ReceiveMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "RegisterVestingAccounts registers vesting targets/accounts",
      "type": "object",
      "required": [
        "register_vesting_accounts"
      ],
      "properties": {
        "register_vesting_accounts": {
          "type": "object",
          "required": [
            "vesting_accounts"
          ],
          "properties": {
            "vesting_accounts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VestingAccount"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Creates a request to change contract ownership ## Executor Only the current owner can execute this",
      "type": "object",
      "required": [
        "propose_new_owner"
      ],
      "properties": {
        "propose_new_owner": {
          "type": "object",
          "required": [
            "expires_in",
            "owner"
          ],
          "properties": {
            "expires_in": {
              "description": "The validity period of the offer to change the owner",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "owner": {
              "description": "The newly proposed owner",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Removes a request to change contract ownership ## Executor Only the current owner can execute this",
      "type": "object",
      "required": [
        "drop_ownership_proposal"
      ],
      "properties": {
        "drop_ownership_proposal": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Claims contract ownership ## Executor Only the newly proposed owner can execute this",
      "type": "object",
      "required": [
        "claim_ownership"
      ],
      "properties": {
        "claim_ownership": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "managed_extension"
      ],
      "properties": {
        "managed_extension": {
          "type": "object",
          "required": [
            "msg"
          ],
          "properties": {
            "msg": {
              "$ref": "#/definitions/ExecuteMsgManaged"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "with_managers_extension"
      ],
      "properties": {
        "with_managers_extension": {
          "type": "object",
          "required": [
            "msg"
          ],
          "properties": {
            "msg": {
              "$ref": "#/definitions/ExecuteMsgWithManagers"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "historical_extension"
      ],
      "properties": {
        "historical_extension": {
          "type": "object",
          "required": [
            "msg"
          ],
          "properties": {
            "msg": {
              "$ref": "#/definitions/ExecuteMsgHistorical"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "Cw20ReceiveMsg": {
      "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "amount",
        "msg",
        "sender"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "msg": {
          "$ref": "#/definitions/Binary"
        },
        "sender": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "ExecuteMsgHistorical": {
      "type": "string",
      "enum": []
    },
    "ExecuteMsgManaged": {
      "oneOf": [
        {
          "description": "Removes vesting targets/accounts. ## Executor Only the current owner can execute this",
          "type": "object",
          "required": [
            "remove_vesting_accounts"
          ],
          "properties": {
            "remove_vesting_accounts": {
              "type": "object",
              "required": [
                "clawback_account",
                "vesting_accounts"
              ],
              "properties": {
                "clawback_account": {
                  "description": "Specifies the account that will receive the funds taken from the vesting accounts.",
                  "type": "string"
                },
                "vesting_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ExecuteMsgWithManagers": {
      "oneOf": [
        {
          "description": "Adds vesting managers ## Executor Only the current owner can execute this",
          "type": "object",
          "required": [
            "add_vesting_managers"
          ],
          "properties": {
            "add_vesting_managers": {
              "type": "object",
              "required": [
                "managers"
              ],
              "properties": {
                "managers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Removes vesting managers ## Executor Only the current owner can execute this",
          "type": "object",
          "required": [
            "remove_vesting_managers"
          ],
          "properties": {
            "remove_vesting_managers": {
              "type": "object",
              "required": [
                "managers"
              ],
              "properties": {
                "managers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VestingAccount": {
      "description": "This structure stores vesting information for a specific address that is getting tokens.",
      "type": "object",
      "required": [
        "address",
        "schedules"
      ],
      "properties": {
        "address": {
          "description": "The address that is getting tokens",
          "type": "string"
        },
        "schedules": {
          "description": "The vesting schedules targeted at the `address`",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VestingSchedule"
          }
        }
      },
      "additionalProperties": false
    },
    "VestingSchedule": {
      "description": "This structure stores parameters for a specific vesting schedule",
      "type": "object",
      "required": [
        "start_point"
      ],
      "properties": {
        "end_point": {
          "description": "The end point for the vesting schedule",
          "anyOf": [
            {
              "$ref": "#/definitions/VestingSchedulePoint"
            },
            {
              "type": "null"
            }
          ]
        },
        "start_point": {
          "description": "The start date for the vesting schedule",
          "allOf": [
            {
              "$ref": "#/definitions/VestingSchedulePoint"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "VestingSchedulePoint": {
      "description": "This structure stores the parameters used to create a vesting schedule.",
      "type": "object",
      "required": [
        "amount",
        "time"
      ],
      "properties": {
        "amount": {
          "description": "The amount of tokens being vested",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "time": {
          "description": "The start time for the vesting schedule",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    }
  }
}
