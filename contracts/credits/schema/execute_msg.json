{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "description": "UpdateConfig is a message that allows to update config of the contract. [Permissioned - DAO]",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "required": [
            "config"
          ],
          "properties": {
            "config": {
              "$ref": "#/definitions/UpdateConfigMsg"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "AddVesting is a message that allows address to claim particular amount of untrn tokens at particular time. Can only store one vesting amount per address. [Permissioned - Airdrop address]",
      "type": "object",
      "required": [
        "add_vesting"
      ],
      "properties": {
        "add_vesting": {
          "type": "object",
          "required": [
            "address",
            "amount",
            "duration",
            "start_time"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start_time": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Transfer is a base message to move tokens to another account without triggering actions. [Permissioned - Airdrop address]",
      "type": "object",
      "required": [
        "transfer"
      ],
      "properties": {
        "transfer": {
          "type": "object",
          "required": [
            "amount",
            "recipient"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "recipient": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Withdraw is a message that burns all vested cNTRN tokens on the sender and sends untrn tokens in 1:1 proportion. [Permissionless]",
      "type": "object",
      "required": [
        "withdraw"
      ],
      "properties": {
        "withdraw": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Burns is a message that burns certain amount of cNTRN tokens and sends untrn tokens in 1:1 proportion. [Permissioned - Airdrop address]",
      "type": "object",
      "required": [
        "burn"
      ],
      "properties": {
        "burn": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "BurnFrom burns owner's cNTRN tokens and mints untrn tokens in 1:1 proportion specified amount for owner. Used to skip vesting as a reward for participating in the lockdrop. [Permissioned - Lockdrop address]",
      "type": "object",
      "required": [
        "burn_from"
      ],
      "properties": {
        "burn_from": {
          "type": "object",
          "required": [
            "amount",
            "owner"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            },
            "owner": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Locks untrn tokens and mints cNTRN tokens in 1:1 proportion to the airdrop balance. [Permissioned - DAO] (DAO address set in initialize func as cw20 minter)",
      "type": "object",
      "required": [
        "mint"
      ],
      "properties": {
        "mint": {
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Timestamp": {
      "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
      "allOf": [
        {
          "$ref": "#/definitions/Uint64"
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    },
    "UpdateConfigMsg": {
      "type": "object",
      "properties": {
        "airdrop_address": {
          "description": "Airdrop contract address",
          "type": [
            "string",
            "null"
          ]
        },
        "lockdrop_address": {
          "description": "Lockdrop contract address,",
          "type": [
            "string",
            "null"
          ]
        },
        "when_withdrawable": {
          "description": "When can start withdrawing untrn tokens",
          "anyOf": [
            {
              "$ref": "#/definitions/Timestamp"
            },
            {
              "type": "null"
            }
          ]
        }
      }
    }
  }
}
